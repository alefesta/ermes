name: ⭐️ Demo Action ⭐️

on:
   issues:
      types: [opened]

# concurrency:
#   group: ci-tests-${{ github.ref }}-1
#   # New commit on branch cancels running workflows of the same branch
#   cancel-in-progress: true

jobs:
   
   setup:
      name: setup
      if: github.actor == 'alefesta'
      runs-on: ubuntu-latest
      steps:
      - name: add Labels
        env:
          GITHUB_TOKEN: ${{ secrets.GH_WORKFLOW }}
        run: |
          gh issue edit ${{github.event.issue.number}} --add-label 'in Progress'
      - uses: actions/checkout@v2
      - name: retrieve infos
        uses: ./.github/workflows/issue-setup.yml


   prepare:
      name: prepare environment
      needs: setup
      runs-on: ubuntu-latest
      steps:
         - name: prepare
           id: prepare
           if: github.actor == 'alefesta'
           uses: ./.github/workflows/issues-setup.yml
 

   evaluate:
      name: evaluate code to be run
      needs: [setup,prepare]
      runs-on: ubuntu-latest
      if: always() && needs.prepare.result == 'success' || needs.prepare.result == 'failure'
      env:
         GITHUB_TOKEN: ${{ secrets.GH_WORKFLOW }}
      steps:
         - uses: actions/checkout@v2
         - name: evaluate
           if: needs.prepare.result == 'success'
           run: echo 'success'
         - name: catch-error
           if: needs.prepare.result == 'failure'
           run: |
            gh run view ${{github.run_id}} --exit-status > error.txt
            gh issue comment ${{github.event.issue.number}} -F error.txt
            gh issue edit ${{github.event.issue.number}} --add-label invalid 
            gh issue edit ${{github.event.issue.number}} --remove-label 'in Progress' 
            gh issue edit ${{github.event.issue.number}} --title "⚠️ ${{ github.event.issue.title }} - Invalid run "
   
   execute:
      name: execute code
      needs: evaluate
      runs-on: ubuntu-latest
      steps:
         - name: execute
           if: needs.evaluate.result == 'success'
           run:  echo 'done'
         - name: catch-error
           if: needs.evaluate.result == 'failure'
           uses: ./.github/workflows/issue-setup.yml
   
   # catch-errors:
   #    name: catch errors
   #    # needs: [prepare-environment,execute-code]
   #    if: needs.prepare-environment.result=='failure' || needs.execute-code.result == 'failure'
   #    uses: ./.github/workflows/issue-setup.yml
   



